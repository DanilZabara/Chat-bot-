import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ int (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ .env –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
btn_phone = KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
btn_fop = KeyboardButton("–§–û–ü")
btn_tov = KeyboardButton("–¢–û–í")
btn_raben = KeyboardButton("–†–∞–±–µ–Ω")
btn_nova_poshta = KeyboardButton("–ù–æ–≤–∞—è –ü–æ—á—Ç–∞")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
user_data = {}

# –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    user_data[message.from_user.id] = {}
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_phone)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üìû", reply_markup=markup)

# –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@dp.message_handler(content_types=types.ContentType.CONTACT)
async def get_phone(message: types.Message):
    user_data[message.from_user.id]['phone'] = message.contact.phone_number
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_fop, btn_tov)
    await message.answer("–í—ã–±–µ—Ä–∏ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã:", reply_markup=markup)

# –í—ã–±–æ—Ä –§–û–ü/–¢–û–í
@dp.message_handler(lambda message: message.text in ["–§–û–ü", "–¢–û–í"])
async def get_payment_type(message: types.Message):
    user_data[message.from_user.id]['payment'] = message.text
    await message.answer("–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–µ—Ä–Ω–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ø—Ä–∏–º–µ—Ä: '–ê—Ä–∞–±–∏–∫–∞ - 2 –∫–≥')")

# –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
@dp.message_handler(lambda message: "-" in message.text)
a
