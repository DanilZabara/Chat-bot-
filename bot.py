import os 
import logging
import asyncio
from datetime import datetime
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
btn_phone = KeyboardButton(text="üìû –ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä", request_contact=True)
btn_fop = KeyboardButton(text="–§–û–ü")
btn_tov = KeyboardButton(text="–¢–û–í")
btn_raben = KeyboardButton(text="–†–∞–±–µ–Ω")
btn_nova_poshta = KeyboardButton(text="–ù–æ–≤–∞ –ü–æ—à—Ç–∞")
btn_new_order = KeyboardButton(text="üÜï –û—Ñ–æ—Ä–º–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
def generate_order_number():
    return datetime.now().strftime("%Y%m%d%H%M%S")

# –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
@dp.message(lambda message: message.text == "/start" or message.text == "üÜï –û—Ñ–æ—Ä–º–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
async def start(message: types.Message):
    user_data[message.from_user.id] = {}  # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    markup = ReplyKeyboardMarkup(keyboard=[[btn_phone]], resize_keyboard=True)
    await message.answer("–í—ñ—Ç–∞—é! –ù–∞–¥–∞–π—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É üìû", reply_markup=markup)

# –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@dp.message(lambda message: message.contact is not None)
async def get_phone(message: types.Message):
    user_data[message.from_user.id]['phone'] = message.contact.phone_number
    markup = ReplyKeyboardMarkup(keyboard=[[btn_fop, btn_tov]], resize_keyboard=True)
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–ø–ª–∞—Ç–∏:", reply_markup=markup)

# –í—ã–±–æ—Ä –§–û–ü/–¢–û–í
@dp.message(lambda message: message.text in ["–§–û–ü", "–¢–û–í"])
async def get_payment_type(message: types.Message):
    user_data[message.from_user.id]['payment'] = message.text
    await message.answer("–ù–∞–ø–∏—à—ñ—Ç—å, –Ω–∞ –∫–æ–≥–æ –≤–∏—Å—Ç–∞–≤–∏—Ç–∏ —Ä–∞—Ö—É–Ω–æ–∫ (–Ω–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó –∞–±–æ –ü–Ü–ë)")

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
@dp.message(lambda message: message.text and message.from_user.id in user_data and 'payment' in user_data[message.from_user.id])
async def get_company_name(message: types.Message):
    user_data[message.from_user.id]['company'] = message.text
    await message.answer("–Ø–∫—É –∫–∞–≤—É –±–∞–∂–∞—î—Ç–µ –∑–∞–º–æ–≤–∏—Ç–∏? –ü—Ä–æ–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–µ—Ä–Ω–∞ –≤ –∫–≥. (–ø—Ä–∏–∫–ª–∞–¥: '–ë—Ä–∞–∑–∏–ª—ñ—è –ß–µ—Ä–∞–¥–æ - 2 –∫–≥')")

# –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
@dp.message(lambda message: "-" in message.text)
async def get_order(message: types.Message):
    user_data[message.from_user.id]['order'] = message.text
    markup = ReplyKeyboardMarkup(keyboard=[[btn_raben, btn_nova_poshta]], resize_keyboard=True)
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Å–ª—É–∂–±—É –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=markup)

# –í—ã–±–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏
@dp.message(lambda message: message.text in ["–†–∞–±–µ–Ω", "–ù–æ–≤–∞ –ü–æ—à—Ç–∞"])
async def get_delivery(message: types.Message):
    user_data[message.from_user.id]['delivery'] = message.text
    await message.answer("–ü—Ä–æ–ø–∏—à—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ (–º—ñ—Å—Ç–æ, –≤—É–ª–∏—Ü—è, –Ω–æ–º–µ—Ä –¥–æ–º—É, –∞–±–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏)")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
@dp.message()
async def get_address(message: types.Message):
    user_id = message.from_user.id
    
    if user_id not in user_data:
        user_data[user_id] = {}  # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    user_data[user_id]['address'] = message.text
    order_number = generate_order_number()
    user_data[user_id]['order_number'] = order_number  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞
    order_text = (
        f"üìå –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_number}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data[user_id].get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üí≥ –û–ø–ª–∞—Ç–∞: {user_data[user_id].get('payment', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        f"üè¢ –ö–æ–º–ø–∞–Ω—ñ—è: {user_data[user_id].get('company', '–ù–µ –≤–∫–∞–∑–∞–Ω–∞')}\n"
        f"‚òï 
